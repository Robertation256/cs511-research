/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package org.cs511.avro;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class DummyAvroMedium extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -3226536057228180375L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"DummyAvroMedium\",\"namespace\":\"org.cs511.avro\",\"fields\":[{\"name\":\"date\",\"type\":\"string\"},{\"name\":\"developer\",\"type\":\"string\"},{\"name\":\"publisher\",\"type\":\"string\"},{\"name\":\"fullDesc\",\"type\":{\"type\":\"record\",\"name\":\"DummyAvroMediumFullDesc\",\"fields\":[{\"name\":\"sort\",\"type\":\"string\"},{\"name\":\"desc\",\"type\":\"string\"}]}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<DummyAvroMedium> ENCODER =
      new BinaryMessageEncoder<DummyAvroMedium>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<DummyAvroMedium> DECODER =
      new BinaryMessageDecoder<DummyAvroMedium>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<DummyAvroMedium> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<DummyAvroMedium> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<DummyAvroMedium> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<DummyAvroMedium>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this DummyAvroMedium to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a DummyAvroMedium from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a DummyAvroMedium instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static DummyAvroMedium fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public java.lang.CharSequence date;
  @Deprecated public java.lang.CharSequence developer;
  @Deprecated public java.lang.CharSequence publisher;
  @Deprecated public org.cs511.avro.DummyAvroMediumFullDesc fullDesc;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public DummyAvroMedium() {}

  /**
   * All-args constructor.
   * @param date The new value for date
   * @param developer The new value for developer
   * @param publisher The new value for publisher
   * @param fullDesc The new value for fullDesc
   */
  public DummyAvroMedium(java.lang.CharSequence date, java.lang.CharSequence developer, java.lang.CharSequence publisher, org.cs511.avro.DummyAvroMediumFullDesc fullDesc) {
    this.date = date;
    this.developer = developer;
    this.publisher = publisher;
    this.fullDesc = fullDesc;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return date;
    case 1: return developer;
    case 2: return publisher;
    case 3: return fullDesc;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: date = (java.lang.CharSequence)value$; break;
    case 1: developer = (java.lang.CharSequence)value$; break;
    case 2: publisher = (java.lang.CharSequence)value$; break;
    case 3: fullDesc = (org.cs511.avro.DummyAvroMediumFullDesc)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'date' field.
   * @return The value of the 'date' field.
   */
  public java.lang.CharSequence getDate() {
    return date;
  }


  /**
   * Sets the value of the 'date' field.
   * @param value the value to set.
   */
  public void setDate(java.lang.CharSequence value) {
    this.date = value;
  }

  /**
   * Gets the value of the 'developer' field.
   * @return The value of the 'developer' field.
   */
  public java.lang.CharSequence getDeveloper() {
    return developer;
  }


  /**
   * Sets the value of the 'developer' field.
   * @param value the value to set.
   */
  public void setDeveloper(java.lang.CharSequence value) {
    this.developer = value;
  }

  /**
   * Gets the value of the 'publisher' field.
   * @return The value of the 'publisher' field.
   */
  public java.lang.CharSequence getPublisher() {
    return publisher;
  }


  /**
   * Sets the value of the 'publisher' field.
   * @param value the value to set.
   */
  public void setPublisher(java.lang.CharSequence value) {
    this.publisher = value;
  }

  /**
   * Gets the value of the 'fullDesc' field.
   * @return The value of the 'fullDesc' field.
   */
  public org.cs511.avro.DummyAvroMediumFullDesc getFullDesc() {
    return fullDesc;
  }


  /**
   * Sets the value of the 'fullDesc' field.
   * @param value the value to set.
   */
  public void setFullDesc(org.cs511.avro.DummyAvroMediumFullDesc value) {
    this.fullDesc = value;
  }

  /**
   * Creates a new DummyAvroMedium RecordBuilder.
   * @return A new DummyAvroMedium RecordBuilder
   */
  public static org.cs511.avro.DummyAvroMedium.Builder newBuilder() {
    return new org.cs511.avro.DummyAvroMedium.Builder();
  }

  /**
   * Creates a new DummyAvroMedium RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new DummyAvroMedium RecordBuilder
   */
  public static org.cs511.avro.DummyAvroMedium.Builder newBuilder(org.cs511.avro.DummyAvroMedium.Builder other) {
    if (other == null) {
      return new org.cs511.avro.DummyAvroMedium.Builder();
    } else {
      return new org.cs511.avro.DummyAvroMedium.Builder(other);
    }
  }

  /**
   * Creates a new DummyAvroMedium RecordBuilder by copying an existing DummyAvroMedium instance.
   * @param other The existing instance to copy.
   * @return A new DummyAvroMedium RecordBuilder
   */
  public static org.cs511.avro.DummyAvroMedium.Builder newBuilder(org.cs511.avro.DummyAvroMedium other) {
    if (other == null) {
      return new org.cs511.avro.DummyAvroMedium.Builder();
    } else {
      return new org.cs511.avro.DummyAvroMedium.Builder(other);
    }
  }

  /**
   * RecordBuilder for DummyAvroMedium instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<DummyAvroMedium>
    implements org.apache.avro.data.RecordBuilder<DummyAvroMedium> {

    private java.lang.CharSequence date;
    private java.lang.CharSequence developer;
    private java.lang.CharSequence publisher;
    private org.cs511.avro.DummyAvroMediumFullDesc fullDesc;
    private org.cs511.avro.DummyAvroMediumFullDesc.Builder fullDescBuilder;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(org.cs511.avro.DummyAvroMedium.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.date)) {
        this.date = data().deepCopy(fields()[0].schema(), other.date);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.developer)) {
        this.developer = data().deepCopy(fields()[1].schema(), other.developer);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.publisher)) {
        this.publisher = data().deepCopy(fields()[2].schema(), other.publisher);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.fullDesc)) {
        this.fullDesc = data().deepCopy(fields()[3].schema(), other.fullDesc);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (other.hasFullDescBuilder()) {
        this.fullDescBuilder = org.cs511.avro.DummyAvroMediumFullDesc.newBuilder(other.getFullDescBuilder());
      }
    }

    /**
     * Creates a Builder by copying an existing DummyAvroMedium instance
     * @param other The existing instance to copy.
     */
    private Builder(org.cs511.avro.DummyAvroMedium other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.date)) {
        this.date = data().deepCopy(fields()[0].schema(), other.date);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.developer)) {
        this.developer = data().deepCopy(fields()[1].schema(), other.developer);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.publisher)) {
        this.publisher = data().deepCopy(fields()[2].schema(), other.publisher);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.fullDesc)) {
        this.fullDesc = data().deepCopy(fields()[3].schema(), other.fullDesc);
        fieldSetFlags()[3] = true;
      }
      this.fullDescBuilder = null;
    }

    /**
      * Gets the value of the 'date' field.
      * @return The value.
      */
    public java.lang.CharSequence getDate() {
      return date;
    }


    /**
      * Sets the value of the 'date' field.
      * @param value The value of 'date'.
      * @return This builder.
      */
    public org.cs511.avro.DummyAvroMedium.Builder setDate(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.date = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'date' field has been set.
      * @return True if the 'date' field has been set, false otherwise.
      */
    public boolean hasDate() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'date' field.
      * @return This builder.
      */
    public org.cs511.avro.DummyAvroMedium.Builder clearDate() {
      date = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'developer' field.
      * @return The value.
      */
    public java.lang.CharSequence getDeveloper() {
      return developer;
    }


    /**
      * Sets the value of the 'developer' field.
      * @param value The value of 'developer'.
      * @return This builder.
      */
    public org.cs511.avro.DummyAvroMedium.Builder setDeveloper(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.developer = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'developer' field has been set.
      * @return True if the 'developer' field has been set, false otherwise.
      */
    public boolean hasDeveloper() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'developer' field.
      * @return This builder.
      */
    public org.cs511.avro.DummyAvroMedium.Builder clearDeveloper() {
      developer = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'publisher' field.
      * @return The value.
      */
    public java.lang.CharSequence getPublisher() {
      return publisher;
    }


    /**
      * Sets the value of the 'publisher' field.
      * @param value The value of 'publisher'.
      * @return This builder.
      */
    public org.cs511.avro.DummyAvroMedium.Builder setPublisher(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.publisher = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'publisher' field has been set.
      * @return True if the 'publisher' field has been set, false otherwise.
      */
    public boolean hasPublisher() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'publisher' field.
      * @return This builder.
      */
    public org.cs511.avro.DummyAvroMedium.Builder clearPublisher() {
      publisher = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'fullDesc' field.
      * @return The value.
      */
    public org.cs511.avro.DummyAvroMediumFullDesc getFullDesc() {
      return fullDesc;
    }


    /**
      * Sets the value of the 'fullDesc' field.
      * @param value The value of 'fullDesc'.
      * @return This builder.
      */
    public org.cs511.avro.DummyAvroMedium.Builder setFullDesc(org.cs511.avro.DummyAvroMediumFullDesc value) {
      validate(fields()[3], value);
      this.fullDescBuilder = null;
      this.fullDesc = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'fullDesc' field has been set.
      * @return True if the 'fullDesc' field has been set, false otherwise.
      */
    public boolean hasFullDesc() {
      return fieldSetFlags()[3];
    }

    /**
     * Gets the Builder instance for the 'fullDesc' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public org.cs511.avro.DummyAvroMediumFullDesc.Builder getFullDescBuilder() {
      if (fullDescBuilder == null) {
        if (hasFullDesc()) {
          setFullDescBuilder(org.cs511.avro.DummyAvroMediumFullDesc.newBuilder(fullDesc));
        } else {
          setFullDescBuilder(org.cs511.avro.DummyAvroMediumFullDesc.newBuilder());
        }
      }
      return fullDescBuilder;
    }

    /**
     * Sets the Builder instance for the 'fullDesc' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public org.cs511.avro.DummyAvroMedium.Builder setFullDescBuilder(org.cs511.avro.DummyAvroMediumFullDesc.Builder value) {
      clearFullDesc();
      fullDescBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'fullDesc' field has an active Builder instance
     * @return True if the 'fullDesc' field has an active Builder instance
     */
    public boolean hasFullDescBuilder() {
      return fullDescBuilder != null;
    }

    /**
      * Clears the value of the 'fullDesc' field.
      * @return This builder.
      */
    public org.cs511.avro.DummyAvroMedium.Builder clearFullDesc() {
      fullDesc = null;
      fullDescBuilder = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public DummyAvroMedium build() {
      try {
        DummyAvroMedium record = new DummyAvroMedium();
        record.date = fieldSetFlags()[0] ? this.date : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.developer = fieldSetFlags()[1] ? this.developer : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.publisher = fieldSetFlags()[2] ? this.publisher : (java.lang.CharSequence) defaultValue(fields()[2]);
        if (fullDescBuilder != null) {
          try {
            record.fullDesc = this.fullDescBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("fullDesc"));
            throw e;
          }
        } else {
          record.fullDesc = fieldSetFlags()[3] ? this.fullDesc : (org.cs511.avro.DummyAvroMediumFullDesc) defaultValue(fields()[3]);
        }
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<DummyAvroMedium>
    WRITER$ = (org.apache.avro.io.DatumWriter<DummyAvroMedium>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<DummyAvroMedium>
    READER$ = (org.apache.avro.io.DatumReader<DummyAvroMedium>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeString(this.date);

    out.writeString(this.developer);

    out.writeString(this.publisher);

    this.fullDesc.customEncode(out);

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.date = in.readString(this.date instanceof Utf8 ? (Utf8)this.date : null);

      this.developer = in.readString(this.developer instanceof Utf8 ? (Utf8)this.developer : null);

      this.publisher = in.readString(this.publisher instanceof Utf8 ? (Utf8)this.publisher : null);

      if (this.fullDesc == null) {
        this.fullDesc = new org.cs511.avro.DummyAvroMediumFullDesc();
      }
      this.fullDesc.customDecode(in);

    } else {
      for (int i = 0; i < 4; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.date = in.readString(this.date instanceof Utf8 ? (Utf8)this.date : null);
          break;

        case 1:
          this.developer = in.readString(this.developer instanceof Utf8 ? (Utf8)this.developer : null);
          break;

        case 2:
          this.publisher = in.readString(this.publisher instanceof Utf8 ? (Utf8)this.publisher : null);
          break;

        case 3:
          if (this.fullDesc == null) {
            this.fullDesc = new org.cs511.avro.DummyAvroMediumFullDesc();
          }
          this.fullDesc.customDecode(in);
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










